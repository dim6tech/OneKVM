{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to use OneKVM!","text":"Copyright statement <p>OneKVM is an open-source firmware by GPL-3.0 license. We used it for our hardware project, and here is the documentation.</p>"},{"location":"#what-is-onekvm","title":"What is OneKVM?","text":"<p>If you work remotely or frequently use remote software such as TeamViewer, it's time to purchase a OneKVM as a backup. When there are some problems with the computer (which often happens and there are always bugs), if you are not around the computer, things will become very awkward.</p> <p>At the same time, if you are a data center operator or engaged in related work, why not consider purchasing a OneKVM for hardware remote control, so that you will not lose control of remote devices in the face of any possible accidents.</p>"},{"location":"#get-started","title":"Get started","text":"<p>Once you received the hardware, you can follow the steps below to get started:</p> <ol> <li>Connect the network cable to the LAN port of the router, make sure the network is available.</li> <li>Plug in the power adapter.</li> <li>Connect the <code>HDMI Out</code> cable to the monitor, and you can see the ip address on the screen.</li> <li>Open the browser and visit the ip address, you will see the login page.</li> <li>Use the <code>admin</code> / <code>admin</code> for default to login, and you can start to use it.</li> <li>Connect the <code>HDMI In</code> and <code>USB Out</code> cable to which you want to control, then back to the browser.</li> </ol>"},{"location":"h264/","title":"H264 / WebRTC","text":""},{"location":"h264/#introduction-to-h264","title":"Introduction To H.264","text":"<p>H.264, also known as MPEG-4 AVC (Advanced Video Coding), is a widely used video compression standard, particularly suited for applications that require high compression ratios, such as internet streaming and Blu-ray disc videos.</p> <p>Compared to MJPEG video, H.264 has the advantages of full audio support and lower bitrate, allowing it to operate with lower bandwidth. However, since the official H.264 video functionality of PiKVM is only compatible with the Raspberry Pi GPU, using H.264 on other devices currently does not support hardware encoding (for example, on OneCloud devices, the Armbian system does not have available VPU drivers).</p> <p>Below are two solutions for H.264 video in the One-KVM project: libx264 and ffmpeg.</p> Libx264 <p>Libx264 is an open-source library used for encoding H.264 video, developed by VideoLAN and other contributors. It is widely used in many video processing software due to its efficient encoding quality and speed.</p> <p>The author has integrated it with 'ustreamer', enabling this feature by default in the Docker container version. Compared to the later 'ffmpeg' solution, it offers better performance and is more user-friendly. This 'ustreamer' branch can be found at https://github.com/mofeng-git/ustreamer.</p> <p>H.264/WebRTC web video may require additional mapping of UDP ports 20000-40000.</p> Ffmpeg <p>This Method is Deprecated. This is for archival use only</p> <p>This feature was designed by a community member and uses ffmpeg for software encoding. However, due to relying on CPU software encoding, its performance on OneCloud devices is poor.</p> <p>Usage</p> <p>This functionality is pre-installed in the integration package One-KVM_Armbian_by-SilentWind_for-Onecloud_24.6.18. It is not included in earlier versions (manual installation instructions are available at the end of this guide if needed). Since the OneCloud CPU has limited performance, the <code>kvmd-ffmpeg</code> service is disabled by default (as shown on the web interface) to avoid affecting the smooth operation of other services.</p> <p></p> <p>If needed, the service can be manually enabled by executing the following command.</p> <pre><code># start the kvmd-ffmpeg service\nsudo systemctl start kvmd-ffmpeg\n# enable the kvmd-ffmpeg service to start at Boot \nsudo systemctl enable kvmd-ffmpeg\n</code></pre> <p>On OneCloud devices, H.264 video experiences significant lag, resulting in a poor user experience.</p> <p></p> <p>Installation</p> <pre><code># This feature is not installed by default, needs to be enabled by running the script kvmd_h264_install.sh\ngit clone  --branch 9b97e01b340484fb1c75916531b2c63aea3e8046 https://github.com/mofeng-git/One-KVM.git\ncd One-KVM \nsudo bash kvmd_h264_install.sh\n\n# Terminate the kvmd-ffmpeg service\nsudo systemctl stop kvmd-ffmpeg\nsudo systemctl disable kvmd-ffmpeg\n</code></pre>"},{"location":"h264/#h264webrtc","title":"H.264/WebRTC","text":"<p>MJPEG video streaming uses the same HTTP connection as web access. In contrast, WebRTC employs a completely different video transmission method, relying on P2P connections and UDP to transmit data. This approach can reduce network load and latency but increases the complexity of configuration.</p> <p>To address this, One-KVM checks which network interface serves as the default gateway and attempts to discover the external address using a Google STUN server. This is necessary when using Tailscale or connecting to One-KVM from the external internet. If you prefer not to use Google (set as the default for reliability), you can choose an alternative STUN server or configure your own STUN server.</p> <p>The default configuration in <code>/etc/kvmd/override.yaml</code> is as follows:</p> <pre><code>janus:\n    stun:\n        host: stun.l.google.com\n        port: 19302\n        retries: 5\n        retries_delay: 5.0\n        timeout: 5.0\n</code></pre> <p>For remote access, you can choose either port forwarding or remote networking. We recommend the remote networking.</p> <p>Port Forwarding</p> <p>In this method, UDP ports 20000-40000 are mapped in the firewall for WebRTC functionality. The demonstration site uses this approach.</p> <p>However, this method has significant limitations due to the need to map a large number of ports.</p> <p></p> <p>Remote Networking</p> <p>Using Tailscale as an example for remote networking, first, install the client: Download \u00b7 Tailscale. You can directly install Tailscale on the One-KVM host with the following command.</p> <pre><code>curl -fsSL https://tailscale.com/install.sh | sh\n# Logging in the same Tailscale account\ntailscale up\n\n# Some Utility Commands\n# View the List of Virtual LAN Device \ntailscale status\n# View Network Status and Relay Server Status\ntailscale netcheck\n# View the Current Device's Virtual LAN IP\ntailscale ip\n</code></pre> <p>Next, set up networking across multiple devices. Below is an example.</p> <p></p> <p>Then, use the virtual LAN IP to access and utilize One-KVM's H.264/WebRTC functionality.</p> <p></p> <p>Since Tailscale's official relay servers are located overseas, network connectivity may be poor. It is recommended to use a self-hosted relay server. You can refer to this article: Self-Hosting a Tailscale Relay Server | Anubis's Blog.</p> <p></p>"},{"location":"h264/#video-demonstration","title":"Video Demonstration","text":"<p>If you find the H.264 video quality unsatisfactory, try increasing the H.264 bitrate through the system menu in the top-right corner of the web interface.</p> <p></p>"},{"location":"mouse/","title":"Mouse","text":""},{"location":"mouse/#introduction","title":"Introduction","text":"<p>On the One-KVM website, the virtual mouse device has two modes: Absolute Mode and Relative Mode.  - In Absolute Mode, the input device transmits the exact coordinates of the cursor movement (X, Y), similar to how a touchscreen or graphics tablet works.  - In Relative Mode, only the relative offset from the current position (dX, dY) is transmitted, and the input device itself is unaware of the absolute position, which is similar to how a regular mouse operates.</p> <p>By default, One-KVM uses Absolute Mode, which is the most convenient for users and software. However, BIOS/UEFI may sometimes not fully support this mode. In such cases, you can switch the mouse mode to Relative Mode in the settings.</p> <p>In Relative Mode, when you click on the video stream window in One-KVM, the browser will capture your mouse, and will remain captured until you press the Esc key to release it.</p> <p>When using the virtual mouse in Relative Mode, a large number of events are generated, which may result in slow transmission speeds over the network or make BIOS/UEFI drivers perceive the response as slow. To address this issue, the program uses vector optimization for mouse events. To activate these optimizations, you can enable the \"Squash mouse moves\" mode in the menu under \"System\" -&gt; \"Squash mouse moves\". If you encounter issues with mouse acceleration, you can try disabling it. This is currently the compromised solution.</p> <p></p> <p>In addition, the VNC service currently does not support the virtual mouse in Relative Mode. This is because the recommended clients do not support the QEMU pointer motion change extension. Additionally, mobile browsers do not support the virtual mouse in Relative Mode.</p>"},{"location":"mouse_jiggler/","title":"Mouse Jiggler","text":""},{"location":"mouse_jiggler/#introduction","title":"Introduction","text":"<p>The mouse jiggler is a feature to simulate mouse movement. It prevents the system from entering sleep mode, standby mode, or activating the screen protection. This feature is especially useful when there are lengthy processes running on the target host (such as software installation), and the user needs to monitor the process with side-view functionality. It eliminates the need for manually moving the mouse to prevent the screen protection from starting.</p>"},{"location":"mouse_jiggler/#activation","title":"Activation","text":"<p>To enable the mouse jiggler feature, you must update to the latest version and add some configurations in <code>/etc/kvmd/override.yaml</code>.</p> <p>The line <code>active: true</code> will allow the mouse jiggler feature to automatically activate and run after a reboot. If you do not want this, you can remove this line.</p> <pre><code>kvmd:\n    hid:\n        jiggler:\n            enabled: true\n            active: true\n</code></pre> <p>After adding the configuration, you need to restart the <code>kvmd</code> service for the changes to take effect.</p> <pre><code>sudo systemctl restart kvmd\n</code></pre> <p></p>"},{"location":"mouse_jiggler/#algorithm","title":"Algorithm","text":"<p>When the mouse jiggler feature is enabled, the program counts down the time since the last user input (any keyboard or mouse action). If no input occurs for 60 seconds, the jiggler will perform a mouse movement, then wait for 60 seconds before repeating the process.</p> <ul> <li>Absolute Mode: The coordinates are converted based on the screen resolution: <code>(-100, -100), wait, (100, 100), wait...</code></li> <li>Relative Mode: <code>(-10, -10), wait, (10, 10), wait...</code></li> </ul> <p>Even if the web page is closed, the mouse jiggler feature will continue to work in the background.</p> <p>Of course, this feature will not interfere with the user's normal work. If the user is interacting with the keyboard or mouse, the program will not cause any disturbance until it detects idle time exceeding the 60-second threshold.</p>"}]}